# Runner config file
# $ string
# @ array

$sprite_factory                                   = generic_sprite

@$sprite_scripts                                  = StandardPickup.as;
													HighlightItems.as;
													HumanAnim.as;
													FireAnim.as;
													BlobPlacement.as;
													RunnerHoverHUD.as;
													RunnerHead.as;
													DefaultActorHUD.as;
													HumanHUD.as;
													RunnerFootSteps.as;
													DazzleAnimation.as;
													RunnerDrowning.as;
												  	DrawHelp.as;
                          							DrawHoverMessages.as;
$sprite_texture                                   = HumanMale.png
s32_sprite_frame_width                            = 32
s32_sprite_frame_height                           = 32
f32 sprite_offset_x                               = 0
f32 sprite_offset_y                               = -4

	$sprite_gibs_start                            = *start*

	$gib_type                                     = predefined
	$gib_style                                    = flesh
	u8 gib_count                                  = 7
	@u8 gib_frame                                 = 4; 5; 6; 7;
	f32 velocity                                  = 25.0
	f32 offset_x                                  = 0.0
	f32 offset_y                                  = 0.0

	$gib_type                                     = predefined
	$gib_style                                    = flesh
	u8 gib_count                                  = 3
	@u8 gib_frame                                 = 1; 2; 3; 4;
	f32 velocity                                  = 10.0
	f32 offset_x                                  = 0.0
	f32 offset_y                                  = 0.0

	$sprite_gibs_end                              = *end*

  $sprite_animation_start                         = *start*

  # default
  $sprite_animation_default_name                  = default
  u16 sprite_animation_default_time               = 0
  u8_sprite_animation_default_loop                = 0
  @u16 sprite_animation_default_frames            = 0;

  # crouch
  $sprite_animation_crouch_name                   = crouch
  u16 sprite_animation_crouch_time                = 0
  u8_sprite_animation_crouch_loop                 = 0
  @u16 sprite_animation_crouch_frames             = 11;

  # point
  $sprite_animation_point_name                   = point
  u16 sprite_animation_point_time                = 0
  u8_sprite_animation_point_loop                 = 0
  @u16 sprite_animation_point_frames             = 24; 25; 26;

  # run
  $sprite_animation_run_name                      = run
  u16 sprite_animation_run_time                   = 3
  u8_sprite_animation_run_loop                    = 1
  @u16 sprite_animation_run_frames                = 1; 2; 3; 4;

  # shoot
  $sprite_animation_shoot_name                    = shoot
  u16 sprite_animation_shoot_time                 = 0
  u8_sprite_animation_shoot_loop                  = 0
  @u16 sprite_animation_shoot_frames              = 10;

  # shoot_run
  $sprite_animation_shoot_run_name                    = shoot_run
  u16 sprite_animation_shoot_run_time                 = 3
  u8_sprite_animation_shoot_run_loop                  = 1
  @u16 sprite_animation_shoot_run_frames              = 27; 28; 29; 30;

  # shoot_jump
  $sprite_animation_shoot_jump_name                    = shoot_jump
  u16 sprite_animation_shoot_jump_time                 = 0
  u8_sprite_animation_shoot_jump_loop                  = 0
  @u16 sprite_animation_shoot_jump_frames              = 27;

  # knocked
  $sprite_animation_knocked_name                  = knocked
  u16 sprite_animation_knocked_time               = 3
  u8_sprite_animation_knocked_loop                = 0
  @u16 sprite_animation_knocked_frames            = 14; 15;

  # knocked_air
  $sprite_animation_knocked_air_name              = knocked_air
  u16 sprite_animation_knocked_air_time           = 3
  u8_sprite_animation_knocked_air_loop            = 0
  @u16 sprite_animation_knocked_air_frames        = 14;

  # dead
  $sprite_animation_dead_name                     = dead
  u16 sprite_animation_dead_time                  = 0
  u8_sprite_animation_dead_loop                   = 0
  @u16 sprite_animation_dead_frames               = 12; 13; 12; 13;

  # fall
  $sprite_animation_fall_name                     = fall
  u16 sprite_animation_fall_time                  = 5
  u8_sprite_animation_fall_loop                   = 0
  @u16 sprite_animation_fall_frames               = 5; 6; 7;

  # stab
  $sprite_animation_stab_name                     = stab
  u16 sprite_animation_stab_time                  = 5
  u8_sprite_animation_stab_loop                   = 0
  @u16 sprite_animation_stab_frames               = 19; 20; 21; 22;

  $sprite_animation_end                           = *end*

$shape_factory                                    = box2d_shape

@$shape_scripts                                   =
f32 shape_mass                                    = 68.0
f32 shape_radius                                  = 7.5
f32 shape_friction                                = 0.07
f32 shape_elasticity                              = 0.0
f32 shape_buoyancy                                = 0.6
f32 shape_drag                                    = 0.1
bool shape_collides                                  = yes
bool shape_ladder                                 = no
bool shape_platform                               = no
 #block_collider
@f32 verticesXY                                   =
u8 block_support                                  = 0
bool block_background                             =  no
bool block_lightpasses                            = no
bool block_snaptogrid                             = no

$movement_factory                                 = generic_movement
@$movement_scripts                                = FaceAimPosition.as;
													HOTHOTHOT.as;
													RunnerMovementInit.as;
													RunnerMovement.as;

$brain_factory                                    = generic_brain
@$scripts                                         = HumanBrain.as;

$attachment_factory                               = box2d_attachment
@$attachment_scripts                              =
# name; pixel offset (from center) X; offset Y; socket/plug 0/1; controller; radius
@$attachment_points                               = PICKUP; 5; 0; 0; 0; 24;

$inventory_factory                                = generic_inventory
@$inventory_scripts                               =
u8 inventory_slots_width                          = 2
u8 inventory_slots_height                         = 2
$inventory_name                                   = Backpack

# general

$name                                             = human
@$scripts                                         = RunnerDefault.as;       #Misc stuff, and knocked updates here. Presumably to do them before everything else.
													StandardControls.as;    #Camera, pickup/getin/detach stuff, grid menus like the inventory, turns off emote when dead.
													StandardPickup.as;      #Pickup and throw items
													ActivateHeldObject.as;  #For activating and throwing bombs and other stuff via pressing space.
													RunnerActivateable.as;  #Add the crate and lantern as activatable objects via ActivateHeldObject.as . Then removes itself.
													DetectLadder.as;        #Informs all scripts afterwards if this blob is on a ladder
													SeatHop.as;             #Attach self to seat by pressing down
													HumanLogic.as;      
                                                    ItemStuff.as;
													BlobPlacement.as;       #Allows blob to place blocks on grid. Also messes with the angle of a held thing, the direct it faces, and hands.
													IsFlammable.as;         #Burn logic. Also spreads fire nearby. Includes funny comments
													EmoteHotkeys.as;        #Hotkeys set emotes.
													FleshHitEffects.as;     #Flesh hit noises and blood particles.
													PainSounds.as;          #Pain noises on damage for blobs not tagged with dead. The specific pain noise chosen is based on the damage taken.
													KnockBack.as;           #Forces this blob around when hit. Put before things that cause damage but after damage scalers.
													DropHeartOnDeath.as;    #Drops a heart that heals when somebody else kills this player. Newly joined players don't drop hearts.
													RunnerCollision.as;     #Collide with other players, stand on shield, crouch through platform, collisions when dead.
													FallDamage.as;          #Apply damage, knock user, and pain/death noise on fall.
													ClimbArrows.as;         #Climb arrows, remove arrow after climbing.
													Stomp.as;               #Stomp on head, apply damage and knock.
													RunnerKnock.as;         #All knock stuff. Knock on hit, dazzle. Heal particles for some reason?
													DefaultActorHUD.as;     #Bottom left heart GUI.
													FallSounds.as;          #Dust particles and noises depending on fall intensity on collision with ground.
													RedFlash.as;            #Red Flash and shake screen on damage. Put before scripts that do hitting.
													EatFoodButton.as;       #Server only. Consumes item held or in inventory on pressing key_eat.
													HurtOnCollide.as;       #Damage tiles and blobs if you run into them hard enough? Also applies force to an object when flying into it?
													NameIsPlayerName.as;    #Sets the InventoryName to the player's character name, then removes itself right after.
													UnSpawnImmunity.as;     #Grants then shortly after removes invincibility on spawn. Removes itself when done.
													TauntAI.as;             #Bot chatting and emoting.
													EmoteBubble.as;         #Tells when emote bubbles should draw, at what angle.
													DrawHoverMessages.as;   #Render hover messages. Also does something else mysterious in onTick(CBlob@) that seems to be either hardcoded, or does nothing.
													OnHitFailed.as;         #On failure to hit something (I.E a shield blocked the hit), fleck sparks off of the hit thing and play a sound.
													RunnerDrowning.as;      #Air and drowning damage, with noises. put after RedFlash.as so it overrides the flash
													FleshHit.as;            #Applies damage from onHit to this. If health goes below "gib health", gibs and kills this. Leave second last. 
													RunnerDeath.as;         #Applies "dead" tag when equal to or below 0 health onHit. Handles MISC stuff that happens when this dies. Leave last.
f32 health                                        = 1.0
# looks & behaviour inside inventory
$inventory_name                                   =
$inventory_icon                                   = -             # default
u8 inventory_icon_frame                           = 0
u8 inventory_icon_frame_width                     = 0
u8 inventory_icon_frame_height                    = 0
u8 inventory_used_width                           = 2
u8 inventory_used_height                          = 2
u8 inventory_max_stacks                           = 0
